# ------------------------------------------------------------------------------------
#  Super-Linter Workflow
#
#  Purpose  : Runs GitHub's Super-Linter against the files that have changed on every
#             push to, or pull request against, the default branch.  The linter set
#             is tailored to this repository so we donâ€™t waste minutes on unrelated
#             languages / tools.
#
#  Docs     : https://github.com/github/super-linter
#  Created  : 2025-04-23
#  Maintainer: @your-team-alias
# ------------------------------------------------------------------------------------

name: super-linter

#######################################################################################
# EVENT TRIGGERS
#
# â€¢ We lint every PR so contributors get immediate feedback.
# â€¢ We also lint direct pushes to the default branch â€“ useful for
#   admin hot-fixes that bypass PR review in an emergency.
#
#   NOTE: If your main branch is called "main", update the branch filters below
#   and the DEFAULT_BRANCH env var further down.
#######################################################################################
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

#######################################################################################
# GLOBAL PERMISSIONS
#   â€¢ The job only needs read access to the repositoryâ€™s code to calculate diffs and
#     report annotations.  Keep permissions minimal to adhere to the principle of
#     least privilege.
#######################################################################################
permissions:
  contents: read

jobs:
  run-lint:
    # -------------------------------------------------------------------------------
    #  RUNTIME
    #
    # â€¢ ubuntu-latest â†’ always maps to the most recent LTS runner.
    #   Super-Linter uses Docker, so container support is essential.
    # -------------------------------------------------------------------------------
    runs-on: ubuntu-latest

    # -------------------------------------------------------------------------------
    #  CONCURRENCY
    #
    # â€¢ Cancel any previous lint run for the same branch / PR.
    #   This avoids wasting runner minutes when devs push multiple updates quickly.
    # -------------------------------------------------------------------------------
    concurrency:
      group: super-linter-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # ---------------------------------------------------------------------------
      # 1) Checkout repository
      #
      # â€¢ We need the *full* history so Super-Linter can figure out which files
      #   actually changed (diff-based linting).  fetch-depth: 0 does that.
      # ---------------------------------------------------------------------------
      - name: ðŸšš  Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for proper diff detection

      # ---------------------------------------------------------------------------
      # 2) Run Super-Linter
      #
      # â€¢ Only enable the linters we actively care about â€“ the rest are disabled to
      #   shorten CI time and avoid noise.  Every option is documented inline.
      #
      # â€¢ DEFAULT_BRANCH must match the branch defined in the "on:" trigger above.
      #
      # â€¢ VALIDATE_ALL_CODEBASE=false â†’ Lint only the changed files for
      #   faster feedback loops.  Set to true periodically (e.g., nightly)
      #   if you want to catch legacy issues.
      # ---------------------------------------------------------------------------
      - name: ðŸ§¹  Lint Code Base
        uses: github/super-linter@v7
        env:
          # -------- Super-Linter core variables -----------------------------------
          DEFAULT_BRANCH: master          # Update if you rename your default branch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # -------- Scope control -----------------------------------------------
          VALIDATE_ALL_CODEBASE: false    # true runs every file â€“ great for cron jobs

          # -------- Disabled linters --------------------------------------------
          # Keep this list sorted alphabetically for readability.
          # If you enable a linter later, remove its flag or set it to "true".
          VALIDATE_CHECKOV: false             # Terraform security scanning â€“ N/A
          VALIDATE_EDITORCONFIG: false        # Not enforced in this repo
          VALIDATE_GO: false                  # Handled in a dedicated Go test workflow
          VALIDATE_GO_MODULES: false          # Ditto
          VALIDATE_GO_RELEASER: false         # v2 syntax unsupported
          VALIDATE_JSCPD: false               # Duplicate-code checker â€“ opt-out
          VALIDATE_JSON_PRETTIER: false       # Formatting handled by Prettier locally
          VALIDATE_MARKDOWN: false            # Turn on if MD linting becomes useful
          VALIDATE_MARKDOWN_PRETTIER: false   # Markdown formatting â€“ skipped
          VALIDATE_YAML_PRETTIER: false       # YAML formatting â€“ skipped
